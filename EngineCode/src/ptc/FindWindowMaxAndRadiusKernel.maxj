/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial)
 * Chapter: 3      Example: 3      Name: Moving Average Weighted
 * MaxFile name: MovingAverageWeighted
 * Summary:
 *       Computes a weighted three point moving average using
 *  zero at boundaries. The weights for the three taps are
 *  passed in as scalar inputs.
 */
package ptc;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class FindWindowMaxAndRadiusKernel extends Kernel {

	DFEType pixelType = Type.pixelType;
	FindWindowMaxAndRadiusKernel(KernelParameters parameters) {
		super(parameters);

		DFEVar pixel = io.input("imageInput", pixelType);

		Memory<DFEVar> windowMax = mem.alloc(pixelType, 2);

		DFEVar currMax = windowMax.read(constant.var(false));
		DFEVar newMax = pixel > currMax ? pixel : currMax;
		windowMax.write(constant.var(false), newMax, constant.var(true));


		DFEVar counter = control.count.simpleCounter(32);
		debug.simPrintf("cycle #%04d: pixel %d, currMax %d, newMax: %d\n", counter, pixel, currMax, newMax);

		io.output("output", pixelType) <== pixel;
	}
}
